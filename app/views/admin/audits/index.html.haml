%h1 Audit Log

- if AuditEvent.first
  - first_event = AuditEvent.first.created_at
  :javascript
    DatePicker.CONFIG['show_helper_text'] = false;
    DatePicker.CONFIG['start_date'] = new Date(#{first_event.strftime("%Y")},#{first_event.strftime("%m").to_i - 1},#{first_event.strftime("%d")});
    DatePicker.CONFIG['end_date'] = new Date();

.BoxFix{ :style => 'position: relative;' }

  %h2#current-date= params[:date].strftime("%B %d, %Y")

  - form_tag admin_audits_path, :method => "get", :id => "date_filter_form", :class => "InlineForm" do
    %fieldset#date-filter
      %legend.Invisible Date Filter

      - if previous_date = AuditEvent.date_before(params[:date])
        = link_to "&laquo; #{previous_date.strftime('%b %d')}", :overwrite_params => { :date => previous_date }
      - else
        %span.Disabled= "&laquo; #{params[:date].ago(1.day).strftime('%B %d')}"

      .Field
        %label{ :for => "date", :class => "Invisible" } Date
        =text_field_tag :date, params[:date].strftime('%m/%d/%Y'), :class => "AuditDatePicker"

      - if next_date = AuditEvent.date_after(params[:date])
        = link_to "#{next_date.strftime('%b %d')} &raquo;", :overwrite_params => { :date => next_date }
      - else
        %span.Disabled= "#{params[:date].since(1.day).strftime('%B %d')} &raquo;"


    .FormAction
      = submit_tag "Filter by Date"


- form_tag admin_audits_path, :method => "get", :id => "audit_filter_form", :class => "InlineForm" do

  #quick-filter
    .Field#ip-address-field
      %label{ :for => "ip", :class => "Invisible" } IP Address
      %select{ :name => "ip", :id => "ip" }
        %option{ :value => "" } IP Address
        %option{ :value => "" } &nbsp;
        -if (!@ip_addresses.empty?)
          = options_for_select(@ip_addresses, params[:ip])

    .Field#user-field
      %label{ :for => "user", :class => "Invisible" } User
      %select{ :name => "user", :id => "user" }
        %option{ :value => "" } User
        %option{ :value => "" } &nbsp;
        -if (!@users.empty?)
          = options_from_collection_for_select(@users, "id", "login", (params[:user] || 0).to_i)

    .Field#event-type-field
      %label{ :for => "event_type", :class => "Invisible" } Event Type
      %select{ :name => "event_type", :id => "event_type" }
        %option{ :value => "" } Event Type
        %option{ :value => "" } &nbsp;
        -if (!@event_types.empty?)
          = options_for_select(@event_types, (params[:event_type]))

    .Field#message-text-field
      %label{ :for => "log" } Message Text:
      = text_field_tag :log, params[:log]

    .FormAction
      - if params[:date]
        %input{ :type => "hidden", :name => "date", :value => params[:date] }
      = submit_tag("Apply Filter")
      &nbsp;
      = link_to "Remove Filter", admin_audits_path, :id => "remove-filters" if browse_by_date_filters_set?

%table#audit-results.index
  %col{ :width => "20%" }
  %col{ :width => "10%" }
  %col{ :width => "15%" }
  %col{ :width => "15%" }
  %col{ :width => "40%" }

  %thead
    %tr
      %th= link_to "Date / Time", :overwrite_params => { :direction => reverse_direction }
      %th IP Address
      %th User
      %th Event Type
      %th Message

  %tbody
    - if @audits.size == 0
      %tr
        %td{ :colspan => 5 }
          %p.Placeholder= "No events that match the criteria exist for this day."
    - else
      -@audits.each do |a|
        %tr
          %td= h(a.created_at.to_s(:mdy_time_tz))
          %td= h(a.ip_address)
          %td= h(event_user_name(a))
          %td= h(a.event_type)
          %td= entify_ampersands(a.log_message)

.Bottom= will_paginate @audits, :previous_label => "Previous", :next_label => "Next"

= render :partial => "admin/audits/print_styles"